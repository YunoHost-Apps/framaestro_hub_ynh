#!/bin/bash
# vim:set noexpandtab:

# Exit on command errors and treat unset variables as an error
set -eu

source .fonctions	# Loads the generic functions usually used in the script
source /usr/share/yunohost/helpers # Source app helpers

CLEAN_SETUP () {
	# Clean installation residues that are not supported by the remove script.
	# Clean hosts
	echo ""
}
TRAP_ON	# Active trap to stop the script if an error is detected.

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
path='/'
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME

script_dir=$PWD

# Check that framaestro is installed
fm_path=$(ynh_app_setting_get 'framaestro' 'final_path')
if [ "x$fm_path" == 'x' ]
then
	ynh_die "The framaestro app need to be installed before framaestro_hub!"
fi

# Check variables are not empty
CHECK_VAR "$app" "app name not set"
CHECK_VAR "$script_dir" "script_dir not set"

CHECK_PATH	# Check and fix path syntax
CHECK_DOMAINPATH	# Check and fix domain disponibility

CHECK_FINALPATH	# Check final path

# Check domain with regex
domain_regex=$(echo "$domain" | sed 's@-@.@g')
CHECK_VAR "$domain_regex" "domain_regex empty"

# Save app settings
ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app is_public $is_public

# Check port availability
FIND_PORT 8014
ynh_app_setting_set $app port $port

# Install dependencies
ynh_install_nodejs 6.10.3
ynh_use_nodejs 6.10.3
nodejs_path=$(ynh_app_setting_get $app nodejs_path)_

# Copy files to the right place
final_path=/var/www/$app
sudo git clone https://github.com/mozilla/togetherjs.git $final_path
ynh_app_setting_set $app final_path $final_path
cd $final_path
git checkout v0.5.6
npm install
cd $script_dir

# Set right permissions
sudo chown -R www-data: "$final_path"

# Copy Nginx conf
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf
sudo cp ../conf/http_upgrade.conf /etc/nginx/conf.d/http_upgrade.conf

# Change variables in nginx configuration
if [ $is_public -eq 1 ];
then
	sudo sed -i "s@#--PRIVATE--@@g" /etc/nginx/conf.d/$domain.d/$app.conf
fi
sudo sed -i "s@__PORT__@$port@g" /etc/nginx/conf.d/$domain.d/$app.conf

# Install systemd script
sudo cp ../conf/togetherjs.service /etc/systemd/system/togetherjs.service
sudo chown root: /etc/systemd/system/togetherjs.service
sudo cp ../conf/togetherjs.sh /usr/local/bin/togetherjs.sh
sudo chown root: /usr/local/bin/togetherjs.sh
sudo sed -i "s@__NODEJS_PATH__@$nodejs_path@g" /usr/local/bin/togetherjs.sh
sudo sed -i "s@__FINALPATH__@$final_path@g" /usr/local/bin/togetherjs.sh
sudo sed -i "s@__PORT__@$port@g" /usr/local/bin/togetherjs.sh

# Install logrotate
sudo cp ../conf/logrotate /etc/logrotate.d/$app

# Making log symbolic link to /var/log
sudo mkdir -p /var/log/$app
sudo chown www-data: /var/log/$app/

# Configure owner
sudo chown -R www-data: $final_path

# Start togetherjs
sudo systemctl daemon-reload
sudo systemctl start togetherjs.service
sudo systemctl enable togetherjs.service

# Add togetherjs as a service
sudo yunohost service add togetherjs -l $final_path/log/production.log

## Modify framaestro config
sudo sed -i -e "s@//together = 'https://__TOGETHERJS__';@together = 'https://$domain';@" $fm_path/p/config.js


# Make app public or private
if [ $is_public -eq 0 ];
then	# If the app is private, only the shortened URLs are publics
	ynh_app_setting_set $app protected_uris "/"
else
	ynh_app_setting_set $app skipped_uris "/"
fi

if [ $is_public -eq 0 ];
then
	# Delete public access
	ynh_app_setting_delete $app unprotected_uris
	# Regenerate SSOwat's configuration
	sudo yunohost app ssowatconf
fi

# Reload Nginx
sudo service nginx reload
